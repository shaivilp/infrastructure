# /etc/nginx/sites-available/monitoring
# Host nginx configuration for monitoring stack

# Upstream definitions for Docker containers on high ports
upstream grafana {
    server 127.0.0.1:10000;
}

upstream prometheus {
    server 127.0.0.1:10090;
}

upstream loki {
    server 127.0.0.1:10110;
}

upstream cadvisor {
    server 127.0.0.1:10081;
}

upstream node-exporter {
    server 127.0.0.1:10101;
}

upstream promtail {
    server 127.0.0.1:10082;
}

upstream alertmanager {
    server 127.0.0.1:9093;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name monitoring.homelab.com;
    return 301 https://$server_name$request_uri;
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    server_name monitoring.homelab.com;

    # SSL configuration with Cloudflare Origin Certificate
    ssl_certificate /opt/cloudflare/full.pem;
    ssl_certificate_key /opt/cloudflare/private_key.pem;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    # Basic authentication
    auth_basic "Homelab Monitoring Infra Access ";
    auth_basic_user_file /etc/nginx/auth/.htpasswd_infra;

    # Logging
    access_log /var/log/nginx/monitoring-access.log;
    error_log /var/log/nginx/monitoring-error.log;

    # # Root location
    # location / {
    #     return 301 /grafana/;
    # }

    # Grafana
    location /grafana/ {
        proxy_pass http://grafana;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Prometheus
    location /prometheus/ {
        proxy_pass http://prometheus/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Remove auth for API calls from Grafana
        location /prometheus/api/ {
            auth_basic off;
            proxy_pass http://prometheus/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Loki (no auth for internal API calls)
    location /loki/ {
        auth_basic off;
        proxy_pass http://loki/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # cAdvisor
    location /cadvisor/ {
        proxy_pass http://cadvisor/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Node Exporter
    location /node-exporter/ {
        proxy_pass http://node-exporter/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Alertmanager
    location /alertmanager/ {
        proxy_pass http://alertmanager/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }


    # Health check
    location /health {
        auth_basic off;
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}